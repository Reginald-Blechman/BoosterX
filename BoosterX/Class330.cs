using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using Material.Icons;
using Material.Icons.WPF;

// Token: 0x020002BC RID: 700
internal sealed class Class330
{
	// Token: 0x060012AF RID: 4783 RVA: 0x0005F658 File Offset: 0x0005D858
	internal static DrawingImage smethod_0(BitmapSource bitmapSource_0)
	{
		if (bitmapSource_0 == null)
		{
			return new DrawingImage();
		}
		DrawingVisual drawingVisual = new DrawingVisual();
		using (DrawingContext drawingContext = drawingVisual.RenderOpen())
		{
			drawingContext.DrawImage(bitmapSource_0, new Rect(0.0, 0.0, (double)bitmapSource_0.PixelWidth, (double)bitmapSource_0.PixelHeight));
		}
		return new DrawingImage(drawingVisual.Drawing);
	}

	// Token: 0x060012B0 RID: 4784 RVA: 0x0005F6D0 File Offset: 0x0005D8D0
	public static BitmapImage smethod_1(string string_0)
	{
		BitmapImage result;
		try
		{
			result = new BitmapImage(new Uri(string_0));
		}
		catch (Exception exception_)
		{
			GClass268.smethod_1(exception_);
			result = new BitmapImage();
		}
		return result;
	}

	// Token: 0x060012B1 RID: 4785 RVA: 0x0005F70C File Offset: 0x0005D90C
	public static Task<BitmapImage> smethod_2(string string_0)
	{
		Class330.Struct153 @struct;
		@struct.asyncTaskMethodBuilder_0 = AsyncTaskMethodBuilder<BitmapImage>.Create();
		@struct.string_0 = string_0;
		@struct.int_0 = -1;
		@struct.asyncTaskMethodBuilder_0.Start<Class330.Struct153>(ref @struct);
		return @struct.asyncTaskMethodBuilder_0.Task;
	}

	// Token: 0x060012B2 RID: 4786 RVA: 0x0005F750 File Offset: 0x0005D950
	public static MaterialIconKind smethod_3(string string_0)
	{
		MaterialIconKind result = 0;
		if (string_0.smethod_9())
		{
			return result;
		}
		if (GClass68.gclass69_0.method_0(string_0, out result))
		{
			return result;
		}
		return 0;
	}

	// Token: 0x060012B3 RID: 4787 RVA: 0x0005F77C File Offset: 0x0005D97C
	public static BitmapSource smethod_4(DrawingImage drawingImage_0)
	{
		DrawingVisual drawingVisual = new DrawingVisual();
		using (DrawingContext drawingContext = drawingVisual.RenderOpen())
		{
			drawingContext.DrawImage(drawingImage_0, new Rect(new Point(0.0, 0.0), new Size(96.0, 96.0)));
		}
		RenderTargetBitmap renderTargetBitmap = new RenderTargetBitmap(96, 96, 96.0, 96.0, PixelFormats.Pbgra32);
		renderTargetBitmap.Render(drawingVisual);
		return renderTargetBitmap;
	}

	// Token: 0x060012B4 RID: 4788 RVA: 0x0005F814 File Offset: 0x0005DA14
	public static BitmapSource smethod_5(string string_0)
	{
		MaterialIcon materialIcon = new MaterialIcon();
		MaterialIconKind kind;
		Enum.TryParse<MaterialIconKind>(string_0, out kind);
		materialIcon.Kind = kind;
		Geometry geometry = Geometry.Parse(materialIcon.Data);
		geometry.Freeze();
		DrawingVisual drawingVisual = new DrawingVisual();
		using (DrawingContext drawingContext = drawingVisual.RenderOpen())
		{
			drawingContext.DrawGeometry(Brushes.White, null, geometry);
		}
		RenderTargetBitmap renderTargetBitmap = new RenderTargetBitmap(96, 96, 96.0, 96.0, PixelFormats.Pbgra32);
		renderTargetBitmap.Render(drawingVisual);
		return renderTargetBitmap;
	}

	// Token: 0x060012B5 RID: 4789 RVA: 0x0005F8A4 File Offset: 0x0005DAA4
	public static DrawingImage smethod_6(string string_0)
	{
		MaterialIcon materialIcon = new MaterialIcon();
		MaterialIconKind kind;
		Enum.TryParse<MaterialIconKind>(string_0, out kind);
		materialIcon.Kind = kind;
		Geometry geometry = Geometry.Parse(materialIcon.Data);
		geometry.Freeze();
		DrawingGroup drawingGroup = new DrawingGroup();
		using (DrawingContext drawingContext = drawingGroup.Open())
		{
			drawingContext.DrawGeometry(Brushes.White, null, geometry);
		}
		return new DrawingImage(drawingGroup);
	}

	// Token: 0x060012B6 RID: 4790 RVA: 0x0000D588 File Offset: 0x0000B788
	public static ObservableCollection<MaterialIconKind> smethod_7()
	{
		return Class330.observableCollection_0;
	}

	// Token: 0x04000BB0 RID: 2992
	public static List<string> list_0 = new List<string>
	{
		"arrowprojectile",
		"arrowprojectilemultiple",
		"axebattle",
		"bomb",
		"bomboff",
		"boomerang",
		"bottletonicplus",
		"bottletonicplusoutline",
		"bottletonicskull",
		"bottletonicskulloutline",
		"bowarrow",
		"candyoffoutline",
		"candyoutline",
		"cards",
		"cardsclub",
		"cardsdiamond",
		"cardsheart",
		"cardsoutline",
		"cardsplaying",
		"cardsplayingclub",
		"cardsplayingclubmultiple",
		"cardsplayingclubmultipleoutline",
		"cardsplayingcluboutline",
		"cardsplayingdiamond",
		"cardsplayingdiamondmultiple",
		"cardsplayingdiamondmultipleoutline",
		"cardsplayingdiamondoutline",
		"cardsplayingheart",
		"cardsplayingheartmultiple",
		"cardsplayingheartmultipleoutline",
		"cardsplayingheartoutline",
		"cardsplayingoutline",
		"cardsplayingspade",
		"cardsplayingspademultiple",
		"cardsplayingspademultipleoutline",
		"cardsplayingspadeoutline",
		"cardsspade",
		"cardsspadeoutline",
		"cardsvariant",
		"checkerboard",
		"chessbishop",
		"chessking",
		"chessknight",
		"chesspawn",
		"chessqueen",
		"chessrook",
		"controller",
		"controllerclassic",
		"controllerclassicoutline",
		"controlleroff",
		"crowncircle",
		"crowncircleoutline",
		"crystalball",
		"dice1",
		"dice1outline",
		"dice2",
		"dice2outline",
		"dice3",
		"dice3outline",
		"dice4",
		"dice4outline",
		"dice5",
		"dice5outline",
		"dice6",
		"dice6outline",
		"diced10",
		"diced10outline",
		"diced12",
		"diced12outline",
		"diced20",
		"diced20outline",
		"diced4",
		"diced4outline",
		"diced6",
		"diced6outline",
		"diced8",
		"diced8outline",
		"dicemultiple",
		"dicemultipleoutline",
		"expansioncard",
		"flask",
		"flaskempty",
		"flaskemptyoutline",
		"accountedit",
		"accounteditoutline",
		"airplaneedit",
		"applicationedit",
		"applicationeditoutline",
		"archiveedit",
		"archiveeditoutline",
		"bookedit",
		"bookeditoutline",
		"briefcaseedit",
		"briefcaseeditoutline",
		"calendaredit",
		"calendareditoutline",
		"circleeditoutline",
		"clipboardedit",
		"clipboardeditoutline",
		"clockedit",
		"clockeditoutline",
		"commentedit",
		"commenteditoutline",
		"contentsaveedit",
		"contentsaveeditoutline",
		"cookieedit",
		"cookieeditoutline",
		"creditcardedit",
		"creditcardeditoutline",
		"datamatrixedit",
		"databaseedit",
		"databaseeditoutline",
		"emailedit",
		"emaileditoutline",
		"filedocumentedit",
		"filedocumenteditoutline",
		"fileedit",
		"fileeditoutline",
		"folderedit",
		"foldereditoutline",
		"homeedit",
		"homeeditoutline",
		"humanedit",
		"imageedit",
		"imageeditoutline",
		"layersedit",
		"monitoredit",
		"movieedit",
		"movieeditoutline",
		"movieopenedit",
		"movieopeneditoutline",
		"noteedit",
		"noteeditoutline",
		"notebookedit",
		"notebookeditoutline",
		"pencil",
		"pencilboxmultiple",
		"pencilboxmultipleoutline",
		"penciloutline",
		"playlistedit",
		"puzzleedit",
		"puzzleeditoutline",
		"qrcodeedit",
		"callmade",
		"callmerge",
		"callmissed",
		"callreceived",
		"callsplit",
		"cellphone",
		"cellphonearrowdown",
		"cellphonearrowdownvariant",
		"cellphonebasic",
		"cellphonecharging",
		"cellphonecheck",
		"cellphonecog",
		"cellphonedock",
		"cellphoneinformation",
		"cellphonekey",
		"cellphonelink",
		"cellphonelinkoff",
		"cellphonelock",
		"cellphonemarker",
		"cellphonemessage",
		"cellphonemessageoff",
		"cellphonenfc",
		"cellphonenfcoff",
		"cellphoneoff",
		"cellphoneplay",
		"cellphoneremove",
		"cellphonescreenshot",
		"cellphonesettings",
		"cellphonesound",
		"cellphonetext",
		"cellphonewireless",
		"deskphone",
		"devices",
		"fax",
		"filephone",
		"filephoneoutline",
		"monitorcellphone",
		"monitorcellphonestar",
		"networkstrength1",
		"networkstrength1alert",
		"networkstrength2",
		"networkstrength2alert",
		"networkstrength3",
		"networkstrength3alert",
		"networkstrength4",
		"networkstrength4alert",
		"networkstrengthoff",
		"networkstrengthoffoutline",
		"networkstrengthoutline",
		"phone",
		"phonealert",
		"phonealertoutline",
		"phonebluetooth",
		"phonebluetoothoutline",
		"phonecancel",
		"phonecanceloutline",
		"phonecheck",
		"phonecheckoutline",
		"phoneclassic",
		"phoneclock",
		"battery",
		"battery10",
		"battery10bluetooth",
		"battery20",
		"battery20bluetooth",
		"battery30",
		"battery30bluetooth",
		"battery40",
		"battery40bluetooth",
		"battery50",
		"battery50bluetooth",
		"battery60",
		"battery60bluetooth",
		"battery70",
		"battery70bluetooth",
		"battery80",
		"battery80bluetooth",
		"battery90",
		"battery90bluetooth",
		"batteryalert",
		"batteryalertbluetooth",
		"batteryalertvariant",
		"batteryalertvariantoutline",
		"batteryarrowdown",
		"batteryarrowdownoutline",
		"batteryarrowup",
		"batteryarrowupoutline",
		"batterybluetooth",
		"batterybluetoothvariant",
		"batterycharging",
		"batterycharging10",
		"batterycharging100",
		"batterycharging20",
		"batterycharging30",
		"batterycharging40",
		"batterycharging50",
		"batterycharging60",
		"batterycharging70",
		"batterycharging80",
		"batterycharging90",
		"batterycharginghigh",
		"batterycharginglow",
		"batterychargingmedium",
		"batterychargingoutline",
		"batterychargingwireless",
		"batterychargingwireless10",
		"batterychargingwireless20",
		"batterychargingwireless30",
		"batterychargingwireless40",
		"batterychargingwireless50",
		"batterychargingwireless60",
		"batterychargingwireless70",
		"batterychargingwireless80",
		"batterychargingwireless90",
		"batterychargingwirelessalert",
		"batterychargingwirelessoutline",
		"batterycheck",
		"batterycheckoutline",
		"batteryclock",
		"batteryclockoutline",
		"arrowprojectile",
		"arrowprojectilemultiple",
		"axebattle",
		"bomb",
		"bomboff",
		"boomerang",
		"bottletonicplus",
		"bottletonicplusoutline",
		"bottletonicskull",
		"bottletonicskulloutline",
		"bowarrow",
		"candyoffoutline",
		"candyoutline",
		"cards",
		"cardsclub",
		"cardsdiamond",
		"cardsheart",
		"cardsoutline",
		"cardsplaying",
		"cardsplayingclub",
		"cardsplayingclubmultiple",
		"cardsplayingclubmultipleoutline",
		"cardsplayingcluboutline",
		"cardsplayingdiamond",
		"cardsplayingdiamondmultiple",
		"cardsplayingdiamondmultipleoutline",
		"cardsplayingdiamondoutline",
		"cardsplayingheart",
		"cardsplayingheartmultiple",
		"cardsplayingheartmultipleoutline",
		"cardsplayingheartoutline",
		"cardsplayingoutline",
		"cardsplayingspade",
		"cardsplayingspademultiple",
		"cardsplayingspademultipleoutline",
		"cardsplayingspadeoutline",
		"cardsspade",
		"cardsspadeoutline",
		"cardsvariant",
		"checkerboard",
		"chessbishop",
		"chessking",
		"chessknight",
		"chesspawn",
		"chessqueen",
		"chessrook",
		"controller",
		"controllerclassic",
		"controllerclassicoutline",
		"controlleroff",
		"crowncircle",
		"crowncircleoutline",
		"crystalball",
		"dice1",
		"dice1outline",
		"dice2",
		"dice2outline",
		"dice3",
		"dice3outline",
		"progresswrench",
		"rake",
		"razordoubleedge",
		"razorsingleedge",
		"rivet",
		"ruler",
		"rulersquare",
		"rulersquarecompass",
		"sawblade",
		"screwflattop",
		"screwlag",
		"screwmachineflattop",
		"screwmachineroundtop",
		"screwroundtop",
		"screwdriver",
		"setsquare",
		"shovel",
		"shoveloff",
		"sickle",
		"spade",
		"spiritlevel",
		"tapemeasure",
		"toolbox",
		"toolboxoutline",
		"tools",
		"wheelbarrow",
		"wrench",
		"wrenchclock",
		"wrenchoutline",
		"cardoorlockopen",
		"cashlock",
		"cashlockopen",
		"cellphonelock",
		"cloudlock",
		"cloudlockoutline",
		"cookielock",
		"cookielockoutline",
		"creditcardlock",
		"creditcardlockoutline",
		"databaselock",
		"databaselockoutline",
		"doorclosedlock",
		"doorslidinglock",
		"downloadlock",
		"downloadlockoutline",
		"emaillock",
		"emaillockoutline",
		"filelock",
		"filelockopen",
		"filelockopenoutline",
		"filelockoutline",
		"folderlock",
		"folderlockopen",
		"folderlockopenoutline",
		"folderlockoutline",
		"formtextboxlock",
		"garagelock",
		"garagevariantlock",
		"homelock",
		"homelockopen",
		"imagelock",
		"imagelockoutline",
		"linklock",
		"lock",
		"lockalert",
		"lockalertoutline",
		"lockcheck",
		"lockcheckoutline",
		"lockclock",
		"lockminus",
		"lockminusoutline",
		"lockoff",
		"lockoffoutline",
		"lockopen",
		"lockopenalert",
		"lockopenalertoutline",
		"lockopencheck",
		"lockopencheckoutline",
		"lockopenminus",
		"lockopenminusoutline",
		"lockopenoutline",
		"lockopenplus",
		"lockopenplusoutline",
		"lockopenremove",
		"lockopenremoveoutline",
		"lockopenvariant",
		"lockopenvariantoutline",
		"lockoutline",
		"lockplus",
		"lockplusoutline",
		"lockquestion",
		"lockremove",
		"lockremoveoutline",
		"lockreset",
		"messagelock",
		"messagelockoutline",
		"messagetextlock",
		"messagetextlockoutline",
		"monitorlock",
		"papercliplock",
		"penlock",
		"pencillock",
		"pencillockoutline",
		"phonelock",
		"cloudprint",
		"cloudprintoutline",
		"fax",
		"paperroll",
		"paperrolloutline",
		"printer",
		"printer3d",
		"printer3dnozzle",
		"printer3dnozzlealert",
		"printer3dnozzlealertoutline",
		"printer3dnozzleheat",
		"printer3dnozzleheatoutline",
		"printer3dnozzleoff",
		"printer3dnozzleoffoutline",
		"printer3dnozzleoutline",
		"printer3doff",
		"printeralert",
		"printercheck",
		"printereye",
		"printeroff",
		"printeroffoutline",
		"printeroutline",
		"printerpos",
		"printerposalert",
		"printerposalertoutline",
		"printerposcancel",
		"printerposcanceloutline",
		"printerposcheck",
		"printerposcheckoutline",
		"printerposcog",
		"printerposcogoutline",
		"printerposedit",
		"printerposeditoutline",
		"printerposminus",
		"printerposminusoutline",
		"printerposnetwork",
		"printerposnetworkoutline",
		"printerposoff",
		"printerposoffoutline",
		"printerposoutline",
		"printerpospause",
		"printerpospauseoutline",
		"printerposplay",
		"printerposplayoutline",
		"printerposplus",
		"printerposplusoutline",
		"printerposrefresh",
		"printerposrefreshoutline",
		"printerposremove",
		"printerposremoveoutline",
		"printerposstar",
		"printerposstaroutline",
		"printerposstop",
		"printerposstopoutline",
		"printerpossync",
		"printerpossyncoutline",
		"printerposwrench",
		"printerposwrenchoutline",
		"printersearch",
		"printersettings",
		"printerwireless",
		"MicrosoftXbox",
		"cloudprint",
		"cloudprintoutline",
		"fax",
		"paperroll",
		"paperrolloutline",
		"printer",
		"printer3d",
		"printer3dnozzle",
		"printer3dnozzlealert",
		"printer3dnozzlealertoutline",
		"printer3dnozzleheat",
		"printer3dnozzleheatoutline",
		"printer3dnozzleoff",
		"printer3dnozzleoffoutline",
		"printer3dnozzleoutline",
		"printer3doff",
		"printeralert",
		"printercheck",
		"printereye",
		"printeroff",
		"printeroffoutline",
		"printeroutline",
		"printerpos",
		"printerposalert",
		"printerposalertoutline",
		"printerposcancel",
		"printerposcanceloutline",
		"printerposcheck",
		"printerposcheckoutline",
		"printerposcog",
		"printerposcogoutline",
		"printerposedit",
		"printerposeditoutline",
		"printerposminus",
		"printerposminusoutline",
		"printerposnetwork",
		"printerposnetworkoutline",
		"printerposoff",
		"printerposoffoutline",
		"printerposoutline",
		"printerpospause",
		"printerpospauseoutline",
		"printerposplay",
		"printerposplayoutline",
		"printerposplus",
		"printerposplusoutline",
		"printerposrefresh",
		"printerposrefreshoutline",
		"printerposremove",
		"printerposremoveoutline",
		"printerposstar",
		"printerposstaroutline",
		"printerposstop",
		"printerposstopoutline",
		"printerpossync",
		"printerpossyncoutline",
		"printerposwrench",
		"printerposwrenchoutline",
		"printersearch",
		"printersettings",
		"printerwireless"
	};

	// Token: 0x04000BB1 RID: 2993
	private static ObservableCollection<MaterialIconKind> observableCollection_0 = new ObservableCollection<MaterialIconKind>
	{
		2868,
		2869,
		559,
		560,
		678,
		985,
		986,
		1085,
		1122,
		1123,
		1124,
		1125,
		1128,
		1385,
		1386,
		1447,
		1448,
		1450,
		1454,
		1456,
		1457,
		1458,
		1459,
		1460,
		1461,
		1462,
		1463,
		1464,
		1465,
		1466,
		1467,
		1468,
		1469,
		1470,
		1471,
		1472,
		1473,
		1474,
		1475,
		1476,
		1477,
		1690,
		1704,
		1705,
		1706,
		1707,
		1708,
		1709,
		2128,
		2129,
		2130,
		2131,
		2237,
		2238,
		2241,
		2413,
		2414,
		2415,
		2416,
		2417,
		2418,
		2419,
		2420,
		2421,
		2422,
		2423,
		2424,
		2425,
		2426,
		2427,
		2428,
		2429,
		2430,
		2431,
		2432,
		2433,
		2434,
		2435,
		2436,
		2437,
		2438,
		2721,
		3068,
		3069,
		3074,
		59,
		60,
		161,
		410,
		411,
		441,
		442,
		1012,
		1013,
		1158,
		1159,
		1273,
		1274,
		1758,
		1801,
		1802,
		1847,
		1848,
		2044,
		2045,
		2112,
		2113,
		2141,
		2142,
		2185,
		2186,
		2351,
		2319,
		2320,
		2608,
		2609,
		2853,
		2854,
		2868,
		2869,
		3146,
		3147,
		3781,
		3782,
		3864,
		3918,
		3919,
		4209,
		4646,
		4710,
		4711,
		4723,
		4724,
		4883,
		4884,
		4869,
		4870,
		5169,
		5171,
		5172,
		5182,
		5324,
		5515,
		5516,
		5533,
		1330,
		1331,
		1332,
		1333,
		1334,
		1569,
		1570,
		1571,
		1572,
		1573,
		1574,
		1575,
		1576,
		1577,
		1578,
		1579,
		1580,
		1581,
		1582,
		1583,
		1584,
		1585,
		1586,
		1587,
		1588,
		1589,
		1590,
		1591,
		1592,
		1593,
		1594,
		2394,
		2401,
		2803,
		2917,
		2918,
		4643,
		4644,
		4828,
		4829,
		4830,
		4831,
		4832,
		4833,
		4834,
		4835,
		4837,
		4838,
		4839,
		5208,
		5209,
		5210,
		5211,
		5212,
		5213,
		5214,
		5215,
		5216,
		5217,
		5219,
		793,
		794,
		795,
		796,
		797,
		798,
		799,
		800,
		801,
		802,
		803,
		804,
		805,
		806,
		807,
		808,
		809,
		810,
		811,
		812,
		813,
		814,
		815,
		816,
		817,
		818,
		819,
		820,
		821,
		822,
		823,
		824,
		825,
		826,
		827,
		828,
		829,
		830,
		831,
		832,
		833,
		834,
		835,
		836,
		837,
		838,
		839,
		840,
		841,
		842,
		843,
		844,
		845,
		846,
		847,
		848,
		849,
		850,
		851,
		852,
		559,
		560,
		678,
		985,
		986,
		1085,
		1122,
		1123,
		1124,
		1125,
		1128,
		1385,
		1386,
		1447,
		1448,
		1450,
		1454,
		1456,
		1457,
		1458,
		1459,
		1460,
		1461,
		1462,
		1463,
		1464,
		1465,
		1466,
		1467,
		1468,
		1469,
		1470,
		1471,
		1472,
		1473,
		1474,
		1475,
		1476,
		1477,
		1690,
		1704,
		1705,
		1706,
		1707,
		1708,
		1709,
		2128,
		2129,
		2130,
		2131,
		2237,
		2238,
		2241,
		2413,
		2414,
		5490,
		5572,
		5583,
		5584,
		5725,
		5804,
		5805,
		5806,
		5828,
		5853,
		5854,
		5855,
		5856,
		5857,
		5852,
		5957,
		6053,
		6054,
		6062,
		6267,
		6289,
		6613,
		6799,
		6800,
		6801,
		7334,
		7418,
		7421,
		7425,
		1540,
		1541,
		1581,
		1932,
		1935,
		2143,
		2144,
		2189,
		2190,
		2329,
		2330,
		2500,
		2503,
		2522,
		2523,
		2613,
		2614,
		2899,
		2900,
		2901,
		2902,
		3165,
		3166,
		3167,
		3168,
		3363,
		3450,
		3454,
		3804,
		3805,
		3934,
		3935,
		4309,
		4329,
		4330,
		4331,
		4332,
		4333,
		4334,
		4337,
		4338,
		4339,
		4340,
		4341,
		4342,
		4343,
		4344,
		4345,
		4346,
		4347,
		4348,
		4349,
		4350,
		4351,
		4352,
		4353,
		4354,
		4355,
		4363,
		4364,
		4365,
		4366,
		4367,
		4368,
		4523,
		4524,
		4549,
		4550,
		4648,
		5128,
		5190,
		5176,
		5177,
		5232,
		1945,
		1946,
		2803,
		5134,
		5135,
		5419,
		5420,
		5421,
		5422,
		5423,
		5424,
		5425,
		5426,
		5427,
		5428,
		5429,
		5430,
		5431,
		5432,
		5433,
		5434,
		5435,
		5436,
		5437,
		5438,
		5439,
		5440,
		5441,
		5442,
		5443,
		5444,
		5445,
		5446,
		5447,
		5448,
		5449,
		5450,
		5451,
		5452,
		5453,
		5454,
		5455,
		5456,
		5457,
		5458,
		5459,
		5460,
		5461,
		5462,
		5463,
		5464,
		5465,
		5466,
		5467,
		5468,
		5469,
		5470,
		5471,
		5472,
		5473,
		5474
	};

	// Token: 0x020002BD RID: 701
	[StructLayout(LayoutKind.Auto)]
	private struct Struct153 : IAsyncStateMachine
	{
		// Token: 0x060012B7 RID: 4791 RVA: 0x0005F914 File Offset: 0x0005DB14
		void IAsyncStateMachine.MoveNext()
		{
			int num = this.int_0;
			BitmapImage result;
			try
			{
				TaskAwaiter<BitmapImage> awaiter;
				if (num != 0)
				{
					awaiter = Task.Run<BitmapImage>(new Func<BitmapImage>(new Class330.Class331
					{
						string_0 = this.string_0
					}.method_0)).GetAwaiter();
					if (!awaiter.IsCompleted)
					{
						this.int_0 = 0;
						this.taskAwaiter_0 = awaiter;
						this.asyncTaskMethodBuilder_0.AwaitUnsafeOnCompleted<TaskAwaiter<BitmapImage>, Class330.Struct153>(ref awaiter, ref this);
						return;
					}
				}
				else
				{
					awaiter = this.taskAwaiter_0;
					this.taskAwaiter_0 = default(TaskAwaiter<BitmapImage>);
					this.int_0 = -1;
				}
				result = awaiter.GetResult();
			}
			catch (Exception exception)
			{
				this.int_0 = -2;
				this.asyncTaskMethodBuilder_0.SetException(exception);
				return;
			}
			this.int_0 = -2;
			this.asyncTaskMethodBuilder_0.SetResult(result);
		}

		// Token: 0x060012B8 RID: 4792 RVA: 0x0000D58F File Offset: 0x0000B78F
		[DebuggerHidden]
		void IAsyncStateMachine.SetStateMachine(IAsyncStateMachine stateMachine)
		{
			this.asyncTaskMethodBuilder_0.SetStateMachine(stateMachine);
		}

		// Token: 0x04000BB2 RID: 2994
		public int int_0;

		// Token: 0x04000BB3 RID: 2995
		public AsyncTaskMethodBuilder<BitmapImage> asyncTaskMethodBuilder_0;

		// Token: 0x04000BB4 RID: 2996
		public string string_0;

		// Token: 0x04000BB5 RID: 2997
		private TaskAwaiter<BitmapImage> taskAwaiter_0;
	}

	// Token: 0x020002BE RID: 702
	private sealed class Class331
	{
		// Token: 0x060012BA RID: 4794 RVA: 0x0005F9DC File Offset: 0x0005DBDC
		internal BitmapImage method_0()
		{
			BitmapImage result;
			try
			{
				if (!this.string_0.StartsWith("https:"))
				{
					this.string_0 = "https:" + this.string_0;
				}
				using (WebClient webClient = new WebClient())
				{
					MemoryStream memoryStream = new MemoryStream(webClient.DownloadData(this.string_0));
					try
					{
						BitmapImage bitmapImage = new BitmapImage();
						bitmapImage.BeginInit();
						bitmapImage.StreamSource = memoryStream;
						bitmapImage.CacheOption = BitmapCacheOption.OnLoad;
						bitmapImage.EndInit();
						bitmapImage.Freeze();
						result = bitmapImage;
					}
					finally
					{
						((IDisposable)memoryStream).Dispose();
					}
				}
			}
			catch (Exception exception_)
			{
				GClass268.smethod_1(exception_);
				result = new BitmapImage();
			}
			return result;
		}

		// Token: 0x04000BB6 RID: 2998
		public string string_0;
	}
}
